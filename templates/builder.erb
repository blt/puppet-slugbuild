#!/bin/sh -e

MKDIR=/bin/mkdir
RSYNC=/usr/bin/rsync
GIT=/usr/bin/git
MKSQUASHFS=/usr/bin/mksquashfs
LOGGER=/usr/bin/logger
TAG=slugbuilder

alias log="$LOGGER -t $TAG"

log "Starting..."

# traut passes inputs on verbatim. That means, if there's no newline plain old
# 'read var var' will fail. Hence, this ugly idiom.
IFS='' read -r LINE || [ -n "$LINE" ]
reponame=`echo $LINE | awk '{ print $1 }'`
oldrev=`echo $LINE | awk '{ print $2 }'`
newrev=`echo $LINE | awk '{ print $3 }'`
refname=`echo $LINE | awk '{ print $4 }'`
branchname=`echo ${refname} | awk -F '/' '{ print $3 }'`

log "$reponame $oldrev $newrev $refname"

rootdir=<%= home %>
clonedir=${rootdir}/clones
repodir=${clonedir}/${reponame}
stripdir=${rootdir}/strips/${reponame}
builddir=${rootdir}/builds/${reponame}

# Construct or merely update the source clone of $reponame
$MKDIR -p ${clonedir}
if [ -d ${repodir} ] # already cloned
then
  log "${reponame} already exists in ${CLONEDIR}. Pulling latest sources."
  cd ${repodir}
  $GIT checkout master
  $GIT pull
else # fresh clone
  log "Creating ${repodir} by cloning from <%= gitcentral %>:${reponame}.git"
  cd ${clonedir}
  $GIT clone <%= gituser %>@<%= gitcentral %>:${reponame}.git
  cd ${repodir}
fi

# Ensure that we have the latest source code, submodules too.
log "Ensuring that ${repodir} is up-to-date."
$GIT checkout ${newrev}
$GIT submodule sync && $GIT submodule update --init --recursive

# Create the stripped version of the source. $GIT-archive is _not_ used because
# it completely falls over in the presence of submodules.
log "Creating strip of ${repodir} in ${stripdir}"
$MKDIR -p ${stripdir}
$RSYNC -avz --exclude='.git' --delete . ${stripdir}

# Build the read-only slug. Future versions of this module will include
# heuristics to interact with makefiles, rakefiles, maven and any other build
# system that might be requested.
slug="${reponame}_${newrev}.sqsh"
log "Building slug ${slug} in ${builddir}"
$MKDIR -p ${builddir}
$MKSQUASHFS ${stripdir} ${builddir}/${slug}

/usr/bin/hare --port <%= mqport %> --host <%= mqhost %> --username <%= mquser %> \
    --password "<%= mqpass %>" --vhost "/traut" --exchange_name traut \
    --route_key "git.${reponame}.${branchname}.build" --ssl_cert <%= mqcert %> \
    --ssl_key <%= mqkey %> --producer "${reponame} ${newrev}"

